{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/jasonnolfi/lofisoul/components/SCList.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport SCPlayer from \"./SCPlayer\";\nimport FetchUser from \"./FetchUser\";\nimport User from \"./User\";\nimport { scAppId, scUser } from \"../config\";\nimport { shuffle } from \"../lib/utils\";\n\nvar SCList = /*#__PURE__*/function (_Component) {\n  _inherits(SCList, _Component);\n\n  var _super = _createSuper(SCList);\n\n  function SCList(props) {\n    var _this;\n\n    _classCallCheck(this, SCList);\n\n    _this.state = {\n      isFetching: false,\n      doneFetching: false,\n      fiveTracks: null,\n      randomTracksFromUsers: null,\n      isModalOpen: true,\n      username: \"\",\n      user: null,\n      fetchErrorMsg: \"\",\n      currentTrack: \"\",\n      tracks: null\n    };\n    return _possibleConstructorReturn(_this);\n  } //function to resolve soundcloud user\n\n\n  _createClass(SCList, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          isFetching = _this$state.isFetching,\n          fiveTracks = _this$state.fiveTracks,\n          randomTracksFromUsers = _this$state.randomTracksFromUsers,\n          isModalOpen = _this$state.isModalOpen,\n          username = _this$state.username,\n          fetchErrorMsg = _this$state.fetchErrorMsg,\n          doneFetching = _this$state.doneFetching,\n          user = _this$state.user;\n      return __jsx(React.Fragment, null, fiveTracks && __jsx(SCPlayer, {\n        currentTrack: fiveTracks[0],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 24\n        }\n      }), __jsx(FetchUser, {\n        onSubmit: this.onSubmit,\n        isModalOpen: isModalOpen,\n        username: username,\n        saveToState: this.saveToState,\n        fetchErrorMsg: fetchErrorMsg,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 9\n        }\n      }), user ? __jsx(User, {\n        user: user,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 17\n        }\n      }) : \"\", isFetching ? __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }\n      }, \"Fetching...\") : __jsx(React.Fragment, null, __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }\n      }, fiveTracks ? fiveTracks.map(function (track) {\n        return __jsx(\"div\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 23\n          }\n        }, __jsx(\"p\", {\n          key: track.id,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 25\n          }\n        }, __jsx(\"strong\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 27\n          }\n        }, track.user.username), __jsx(\"br\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 27\n          }\n        }), \": \", track.title), __jsx(\"iframe\", {\n          width: \"100%\",\n          height: \"166\",\n          scrolling: \"no\",\n          frameborder: \"no\",\n          allow: \"autoplay\",\n          src: \"https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/\".concat(track.id),\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 25\n          }\n        }));\n      }) : \"\"), __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }\n      }, randomTracksFromUsers ? randomTracksFromUsers.map(function (item) {\n        return __jsx(\"div\", {\n          key: item.track.id,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 23\n          }\n        }, __jsx(\"p\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 25\n          }\n        }, __jsx(\"strong\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 27\n          }\n        }, \"User:\"), \" \", item.user.username), __jsx(\"p\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 25\n          }\n        }, \"Song: \", item.track.title), __jsx(\"p\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 25\n          }\n        }, \"Referral: \", item.referral.title), __jsx(\"iframe\", {\n          width: \"100%\",\n          height: \"166\",\n          scrolling: \"no\",\n          frameborder: \"no\",\n          allow: \"autoplay\",\n          src: \"https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/\".concat(item.track.id),\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 25\n          }\n        }));\n      }) : \"\")));\n    }\n  }]);\n\n  return SCList;\n}(Component);\n\nexport default SCList;","map":{"version":3,"sources":["/Users/jasonnolfi/lofisoul/components/SCList.js"],"names":["React","Component","styled","SCPlayer","FetchUser","User","scAppId","scUser","shuffle","SCList","props","state","isFetching","doneFetching","fiveTracks","randomTracksFromUsers","isModalOpen","username","user","fetchErrorMsg","currentTrack","tracks","onSubmit","saveToState","map","track","id","title","item","referral"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport SCPlayer from \"./SCPlayer\";\nimport FetchUser from \"./FetchUser\";\nimport User from \"./User\";\nimport { scAppId, scUser } from \"../config\";\nimport { shuffle } from \"../lib/utils\";\n\nclass SCList extends Component {\n  constructor(props) {\n    this.state = {\n      isFetching: false,\n      doneFetching: false,\n      fiveTracks: null,\n      randomTracksFromUsers: null,\n      isModalOpen: true,\n      username: \"\",\n      user: null,\n      fetchErrorMsg: \"\",\n      currentTrack: \"\",\n      tracks: null,\n    };\n  }\n\n  //function to resolve soundcloud user\n  soundCloudResolveUser = async (user) => {\n    try {\n      const userToResolve = await SC.resolve(`https://soundcloud.com/${user}`);\n      const response = await SC.get(`/users/${userToResolve.id}/favorites`, {\n        limit: 1000,\n        linked_partitioning: 1,\n      });\n\n      if (response.collection.length < 5) {\n        this.setState({\n          fetchErrorMsg: `You don't have enough likes. Try favoriting some tracks on soundcloud!`,\n        });\n        return;\n      }\n      this.initTrack(userToResolve);\n      this.setState({ user: userToResolve, isModalOpen: false });\n    } catch (e) {\n      const errorMsg =\n        e.status === 404 ? `Whoops! That user doesn't exist!` : e.message;\n      this.setState({ fetchErrorMsg: errorMsg });\n    }\n  };\n\n  //get SC user from form\n  saveToState = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  onSubmit = (e) => {\n    e.preventDefault();\n    this.soundCloudResolveUser(this.state.username);\n  };\n\n  initTrack = async (user) => {\n    //initialize SC\n    this.setState({ isFetching: true });\n\n    const response = await SC.get(`/users/${user.id}/favorites`, {\n      limit: 1000,\n      linked_partitioning: 1,\n    });\n\n    const sortedTracks = shuffle(response.collection, 5);\n\n    //run logic for getting random song based on users that liked 5 sorted tracks\n    let randomPlaylist = await Promise.all(\n      sortedTracks.map(async (item) => {\n        let newItem = await this.generateRandomPlaylist(item);\n        return newItem;\n      })\n    );\n\n    this.setState({\n      isFetching: false,\n      fiveTracks: sortedTracks,\n      randomTracksFromUsers: randomPlaylist,\n    });\n  };\n\n  generateRandomPlaylist = async (track) => {\n    const usersWhoLiked = await SC.get(`/tracks/${track.id}/favoriters`, {\n      limit: 1000,\n      linked_partitioning: 1,\n    });\n\n    let userArr = usersWhoLiked.collection;\n    const arrayUsersFaves = userArr.filter(\n      (user) => user.public_favorites_count > 0\n    );\n    //sort users without playlists\n    //TODO::need to figure out a way to filter out user\n    let randomUser = shuffle(arrayUsersFaves, 1)[0];\n    //get first list of random users\n    const userFaves = await SC.get(`/users/${randomUser.id}/favorites`, {\n      limit: 1000,\n      linked_partitioning: 1,\n    });\n    const randomTrack = shuffle(userFaves.collection, 1)[0];\n    const randomObj = {\n      referral: track,\n      user: randomUser,\n      track: randomTrack,\n    };\n    return randomObj;\n  };\n\n  componentDidMount = () => {\n    SC.initialize({\n      client_id: scAppId,\n      redirect_uri: \"http://jambox.thatdudeartoo.com/callback.html\",\n    });\n  };\n  render() {\n    const {\n      isFetching,\n      fiveTracks,\n      randomTracksFromUsers,\n      isModalOpen,\n      username,\n      fetchErrorMsg,\n      doneFetching,\n      user,\n    } = this.state;\n    return (\n      <>\n        {fiveTracks && <SCPlayer currentTrack={fiveTracks[0]} />}\n        <FetchUser\n          onSubmit={this.onSubmit}\n          isModalOpen={isModalOpen}\n          username={username}\n          saveToState={this.saveToState}\n          fetchErrorMsg={fetchErrorMsg}\n        />\n        {user ? <User user={user} /> : \"\"}\n        {isFetching ? (\n          <div>Fetching...</div>\n        ) : (\n          <>\n            <div>\n              {fiveTracks\n                ? fiveTracks.map((track) => {\n                    return (\n                      <div>\n                        <p key={track.id}>\n                          <strong>{track.user.username}</strong>\n                          <br />: {track.title}\n                        </p>\n                        <iframe\n                          width=\"100%\"\n                          height=\"166\"\n                          scrolling=\"no\"\n                          frameborder=\"no\"\n                          allow=\"autoplay\"\n                          src={`https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/${track.id}`}\n                        ></iframe>\n                      </div>\n                    );\n                  })\n                : \"\"}\n            </div>\n            <div>\n              {randomTracksFromUsers\n                ? randomTracksFromUsers.map((item) => {\n                    return (\n                      <div key={item.track.id}>\n                        <p>\n                          <strong>User:</strong> {item.user.username}\n                        </p>\n                        <p>Song: {item.track.title}</p>\n                        <p>Referral: {item.referral.title}</p>\n                        <iframe\n                          width=\"100%\"\n                          height=\"166\"\n                          scrolling=\"no\"\n                          frameborder=\"no\"\n                          allow=\"autoplay\"\n                          src={`https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/${item.track.id}`}\n                        ></iframe>\n                      </div>\n                    );\n                  })\n                : \"\"}\n            </div>\n          </>\n        )}\n      </>\n    );\n  }\n}\n\nexport default SCList;\n"]},"metadata":{},"sourceType":"module"}