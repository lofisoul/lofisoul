{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/jasonnolfi/lofisoul/components/SCList.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { scAppId, scUser } from '../config';\nimport { shuffle } from '../lib/utils';\n\nvar SCList = /*#__PURE__*/function (_Component) {\n  _inherits(SCList, _Component);\n\n  var _super = _createSuper(SCList);\n\n  function SCList() {\n    var _this;\n\n    _classCallCheck(this, SCList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      isFetching: false,\n      fiveTracks: null,\n      randomTracksFromUsers: null\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"initTrack\", function _callee2() {\n      var response, sortedTracks, randomPlaylist, track, trackSrc;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              //initialize SC\n              _this.setState({\n                isFetching: true\n              });\n\n              _context2.next = 3;\n              return _regeneratorRuntime.awrap(SC.get(\"/users/\".concat(scUser.id, \"/favorites\"), {\n                limit: 1000,\n                linked_partitioning: 1\n              }));\n\n            case 3:\n              response = _context2.sent;\n              console.log(response.collection);\n              sortedTracks = shuffle(response.collection, 5); //run logic for getting random song based on users that liked 5 sorted tracks\n\n              _context2.next = 8;\n              return _regeneratorRuntime.awrap(Promise.all(sortedTracks.map(function _callee(item) {\n                var newItem;\n                return _regeneratorRuntime.async(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        console.log(item);\n                        _context.next = 3;\n                        return _regeneratorRuntime.awrap(_this.generateRandomPlaylist(item));\n\n                      case 3:\n                        newItem = _context.sent;\n                        return _context.abrupt(\"return\", newItem);\n\n                      case 5:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, null, null, null, Promise);\n              })));\n\n            case 8:\n              randomPlaylist = _context2.sent;\n\n              _this.setState({\n                isFetching: false,\n                fiveTracks: sortedTracks,\n                randomTracksFromUsers: randomPlaylist\n              });\n\n              track = response.collection[27];\n              trackSrc = \"\".concat(track.stream_url, \"?client_id=\").concat(scAppId);\n              _this.audio = new Audio();\n              _this.audio.crossOrigin = \"anonymous\";\n              _this.audio.src = trackSrc;\n              _this.context = new (window.AudioContext || window.webkitAudioContext)();\n              _this.source = _this.context.createMediaElementSource(_this.audio);\n              _this.analyser = _this.context.createAnalyser();\n\n              _this.source.connect(_this.analyser);\n\n              _this.analyser.connect(_this.context.destination);\n\n              _this.frequency_array = new Uint8Array(_this.analyser.frequencyBinCount);\n\n            case 21:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"generateRandomPlaylist\", function _callee3(track) {\n      var usersWhoLiked, userArr, arrayUsersFaves, randomUser, userFaves, randomTrack, randomObj;\n      return _regeneratorRuntime.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return _regeneratorRuntime.awrap(SC.get(\"/tracks/\".concat(track.id, \"/favoriters\"), {\n                limit: 1000,\n                linked_partitioning: 1\n              }));\n\n            case 2:\n              usersWhoLiked = _context3.sent;\n              console.log(usersWhoLiked);\n              userArr = usersWhoLiked.collection;\n              arrayUsersFaves = userArr.filter(function (user) {\n                return user.public_favorites_count > 0;\n              }); //sort users without playlists\n\n              randomUser = shuffle(arrayUsersFaves, 1)[0]; //get first list of random users\n\n              _context3.next = 9;\n              return _regeneratorRuntime.awrap(SC.get(\"/users/\".concat(randomUser.id, \"/favorites\"), {\n                limit: 1000,\n                linked_partitioning: 1\n              }));\n\n            case 9:\n              userFaves = _context3.sent;\n              randomTrack = shuffle(userFaves.collection, 1)[0];\n              randomObj = {\n                referral: track,\n                user: randomUser,\n                track: randomTrack\n              };\n              console.log(randomObj);\n              return _context3.abrupt(\"return\", randomObj);\n\n            case 14:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"componentDidMount\", function () {\n      SC.initialize({\n        client_id: scAppId,\n        redirect_uri: 'http://jambox.thatdudeartoo.com/callback.html'\n      });\n      console.log(scAppId);\n      console.log(scUser);\n\n      _this.initTrack();\n    });\n\n    return _this;\n  }\n\n  _createClass(SCList, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          isFetching = _this$state.isFetching,\n          fiveTracks = _this$state.fiveTracks,\n          randomTracksFromUsers = _this$state.randomTracksFromUsers;\n\n      if (isFetching) {\n        return __jsx(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 20\n          }\n        }, \"Fetching...\");\n      }\n\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }\n      }, __jsx(\"div\", {\n        style: {\n          borderBottom: '1px solid gray',\n          paddingBottom: '20px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 17\n        }\n      }, fiveTracks ? fiveTracks.map(function (track) {\n        return __jsx(\"p\", {\n          key: track.id,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 28\n          }\n        }, __jsx(\"strong\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 46\n          }\n        }, track.user.username), __jsx(\"br\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 84\n          }\n        }), \": \", track.title);\n      }) : ''), __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 17\n        }\n      }, randomTracksFromUsers ? randomTracksFromUsers.map(function (item) {\n        console.log(item);\n        return __jsx(\"div\", {\n          key: item.track.id,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 28\n          }\n        }, __jsx(\"p\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }\n        }, __jsx(\"strong\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 28\n          }\n        }, \"User:\"), \" \", item.user.username), __jsx(\"p\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }\n        }, \"Song: \", item.track.title), __jsx(\"p\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }\n        }, \"Referral: \", item.referral.title));\n      }) : 'Error'));\n    }\n  }]);\n\n  return SCList;\n}(Component);\n\nexport default SCList;","map":{"version":3,"sources":["/Users/jasonnolfi/lofisoul/components/SCList.js"],"names":["React","Component","styled","scAppId","scUser","shuffle","SCList","isFetching","fiveTracks","randomTracksFromUsers","setState","SC","get","id","limit","linked_partitioning","response","console","log","collection","sortedTracks","Promise","all","map","item","generateRandomPlaylist","newItem","randomPlaylist","track","trackSrc","stream_url","audio","Audio","crossOrigin","src","context","window","AudioContext","webkitAudioContext","source","createMediaElementSource","analyser","createAnalyser","connect","destination","frequency_array","Uint8Array","frequencyBinCount","usersWhoLiked","userArr","arrayUsersFaves","filter","user","public_favorites_count","randomUser","userFaves","randomTrack","randomObj","referral","initialize","client_id","redirect_uri","initTrack","state","borderBottom","paddingBottom","username","title"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport {scAppId, scUser} from '../config';\nimport {shuffle} from '../lib/utils';\n\nclass SCList extends Component {\n    state = {\n        isFetching: false,\n        fiveTracks: null,\n        randomTracksFromUsers: null\n    }\n    \n    initTrack = async () => {\n        //initialize SC\n        this.setState({isFetching:true})\n        \n        const response = await SC.get(`/users/${scUser.id}/favorites`,{\n            limit:1000,\n            linked_partitioning:1\n        })\n        console.log(response.collection);\n        const sortedTracks = shuffle(response.collection,5);\n\n        //run logic for getting random song based on users that liked 5 sorted tracks\n        let randomPlaylist = await Promise.all(sortedTracks.map(async(item) => {\n            console.log(item)\n            let newItem = await this.generateRandomPlaylist(item);\n            return newItem\n        }))\n        \n        \n        \n        this.setState({isFetching:false, fiveTracks:sortedTracks, randomTracksFromUsers: randomPlaylist})\n        const track = response.collection[27];\n        const trackSrc = `${track.stream_url}?client_id=${scAppId}`;\n        this.audio = new Audio();\n        this.audio.crossOrigin = \"anonymous\";\n        this.audio.src = trackSrc;\n        this.context = new (window.AudioContext || window.webkitAudioContext)();\n        this.source = this.context.createMediaElementSource(this.audio);\n\n        this.analyser = this.context.createAnalyser();\n        this.source.connect(this.analyser);\n        this.analyser.connect(this.context.destination);\n        this.frequency_array = new Uint8Array(this.analyser.frequencyBinCount);        \n    }\n\n    generateRandomPlaylist = async (track) => {\n        const usersWhoLiked = await SC.get(`/tracks/${track.id}/favoriters`,{\n            limit: 1000,\n            linked_partitioning:1\n        })\n        console.log(usersWhoLiked)\n        let userArr = usersWhoLiked.collection;\n        const arrayUsersFaves = userArr.filter(user=> user.public_favorites_count>0)\n        //sort users without playlists\n        const randomUser = shuffle(arrayUsersFaves,1)[0];\n        //get first list of random users\n        const userFaves = await SC.get(`/users/${randomUser.id}/favorites`,{\n            limit: 1000,\n            linked_partitioning:1\n        });\n        const randomTrack = shuffle(userFaves.collection,1)[0];\n        const randomObj = {\n            referral: track,\n            user: randomUser,\n            track: randomTrack\n        }\n        console.log(randomObj)\n        return randomObj\n    }\n\n    componentDidMount = () => {\n        SC.initialize({\n            client_id: scAppId,\n            redirect_uri: 'http://jambox.thatdudeartoo.com/callback.html'\n        });\n        console.log(scAppId);\n        console.log(scUser);\n        this.initTrack();\n    }\n    render() {\n        const {isFetching, fiveTracks, randomTracksFromUsers} = this.state;\n        if(isFetching) {\n            return <div>Fetching...</div>\n         }\n        return (\n            <div>\n                <div style={{borderBottom: '1px solid gray', paddingBottom: '20px'}}>\n                {(fiveTracks) ? fiveTracks.map(track=>{\n                    return <p key={track.id}><strong>{track.user.username}</strong><br/>: {track.title}</p>\n                }) : ''}\n                </div>\n                <div>\n                {(randomTracksFromUsers) ? randomTracksFromUsers.map(item=>{\n                    console.log(item);\n                    return <div key={item.track.id}>\n                        <p><strong>User:</strong> {item.user.username}</p>\n                        <p>Song: {item.track.title}</p>\n                        <p>Referral: {item.referral.title}</p>\n                    </div>\n                }) : 'Error'}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default SCList;"]},"metadata":{},"sourceType":"module"}